plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.github.node-gradle.node" version "7.0.0"
}

group = 'com.lukeyang'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
compileJava.options.fork = true
compileJava.options.forkOptions.executable = '/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/bin/javac'

bootJar {
    enabled = false
}

jar {
    enabled = true
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}


// tasks.named('test') {
// 	useJUnitPlatform()
// }

// Read more about how to configure the plugin from
// https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
node {
    version = '20.8.0'
}
task buildReactApp(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/webpack/bin/webpack.js')
    args = [
            '--entry', './src/main/webapp/javascript/Main.jsx',
            '-o', './src/main/resources/static/dist'
    ]
}


processResources.dependsOn 'buildReactApp'
clean.delete << file('node_modules')
clean.delete << file('src/main/resources/static/dist')
